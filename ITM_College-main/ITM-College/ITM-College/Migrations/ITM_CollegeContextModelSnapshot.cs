// <auto-generated />
using System;
using ITM_College.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ITM_College.Migrations
{
    [DbContext(typeof(ITM_CollegeContext))]
    partial class ITM_CollegeContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ITM_College.Models.Admin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("AdminEmail")
                        .HasMaxLength(55)
                        .IsUnicode(false)
                        .HasColumnType("varchar(55)")
                        .HasColumnName("adminEmail");

                    b.Property<string>("AdminImg")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("AdminName")
                        .HasMaxLength(55)
                        .IsUnicode(false)
                        .HasColumnType("varchar(55)")
                        .HasColumnName("adminName");

                    b.Property<string>("Password")
                        .HasMaxLength(55)
                        .IsUnicode(false)
                        .HasColumnType("varchar(55)")
                        .HasColumnName("password");

                    b.Property<int?>("Role")
                        .HasColumnType("int")
                        .HasColumnName("role");

                    b.HasKey("Id");

                    b.ToTable("Admin", (string)null);
                });

            modelBuilder.Entity("ITM_College.Models.Contact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Message")
                        .HasColumnType("text")
                        .HasColumnName("message");

                    b.Property<string>("UserEmail")
                        .HasMaxLength(55)
                        .IsUnicode(false)
                        .HasColumnType("varchar(55)")
                        .HasColumnName("userEmail");

                    b.Property<string>("UserName")
                        .HasMaxLength(55)
                        .IsUnicode(false)
                        .HasColumnType("varchar(55)")
                        .HasColumnName("userName");

                    b.HasKey("Id");

                    b.ToTable("Contact", (string)null);
                });

            modelBuilder.Entity("ITM_College.Models.Course", b =>
                {
                    b.Property<int>("CourseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("courseID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CourseId"), 1L, 1);

                    b.Property<string>("CourseDesc")
                        .IsRequired()
                        .HasMaxLength(55)
                        .IsUnicode(false)
                        .HasColumnType("varchar(55)")
                        .HasColumnName("courseDesc");

                    b.Property<int?>("CourseDuration")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("courseDuration");

                    b.Property<string>("CourseImg")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("courseImg");

                    b.Property<string>("CourseName")
                        .IsRequired()
                        .HasMaxLength(55)
                        .IsUnicode(false)
                        .HasColumnType("varchar(55)")
                        .HasColumnName("courseName");

                    b.Property<int?>("FacultyId")
                        .HasColumnType("int")
                        .HasColumnName("facultyID");

                    b.HasKey("CourseId");

                    b.HasIndex("FacultyId");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("ITM_College.Models.Department", b =>
                {
                    b.Property<int>("DepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("departmentID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DepartmentId"), 1L, 1);

                    b.Property<string>("DepartmentDesc")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("departmentDesc");

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("departmentName");

                    b.HasKey("DepartmentId");

                    b.ToTable("Department", (string)null);
                });

            modelBuilder.Entity("ITM_College.Models.Facility", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("FacilityDesc")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("facilityDesc");

                    b.Property<string>("FacilityImg")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("facilityImg");

                    b.Property<string>("FacilityName")
                        .IsRequired()
                        .HasMaxLength(55)
                        .IsUnicode(false)
                        .HasColumnType("varchar(55)")
                        .HasColumnName("facilityName");

                    b.HasKey("Id");

                    b.ToTable("Facilities");
                });

            modelBuilder.Entity("ITM_College.Models.Faculty", b =>
                {
                    b.Property<int>("FacultyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("facultyID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FacultyId"), 1L, 1);

                    b.Property<int?>("FacultyDepartment")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("facultyDepartment");

                    b.Property<string>("FacultyEmail")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("facultyEmail");

                    b.Property<string>("FacultyImg")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("facultyImg");

                    b.Property<string>("FacultyName")
                        .IsRequired()
                        .HasMaxLength(55)
                        .IsUnicode(false)
                        .HasColumnType("varchar(55)")
                        .HasColumnName("facultyName");

                    b.Property<string>("FacultyPassword")
                        .IsRequired()
                        .HasMaxLength(55)
                        .IsUnicode(false)
                        .HasColumnType("varchar(55)")
                        .HasColumnName("facultyPassword");

                    b.Property<int?>("Gender")
                        .HasColumnType("int")
                        .HasColumnName("gender");

                    b.Property<int?>("Role")
                        .HasColumnType("int");

                    b.HasKey("FacultyId");

                    b.HasIndex("FacultyDepartment");

                    b.ToTable("faculties", (string)null);
                });

            modelBuilder.Entity("ITM_College.Models.PreviousExam", b =>
                {
                    b.Property<int>("ExamId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("examID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExamId"), 1L, 1);

                    b.Property<string>("Center")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("center");

                    b.Property<int?>("ClassObtained")
                        .HasColumnType("int")
                        .HasColumnName("classObtained");

                    b.Property<int?>("EnrollmentNumber")
                        .HasColumnType("int")
                        .HasColumnName("enrollmentNumber");

                    b.Property<string>("Field")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("field");

                    b.Property<string>("InstituteName")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("instituteName");

                    b.Property<int?>("Marks")
                        .HasColumnType("int")
                        .HasColumnName("marks");

                    b.Property<int?>("OutOf")
                        .HasColumnType("int")
                        .HasColumnName("outOf");

                    b.Property<string>("Sports")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("sports");

                    b.Property<string>("Stream")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("stream");

                    b.Property<int?>("StudentDataId")
                        .HasColumnType("int")
                        .HasColumnName("studentDataID");

                    b.HasKey("ExamId")
                        .HasName("PK__Previous__A56D123FDE5C2BE6");

                    b.HasIndex("StudentDataId");

                    b.ToTable("PreviousExam", (string)null);
                });

            modelBuilder.Entity("ITM_College.Models.Student", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("studentID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StudentId"), 1L, 1);

                    b.Property<string>("Password")
                        .HasMaxLength(55)
                        .IsUnicode(false)
                        .HasColumnType("varchar(55)")
                        .HasColumnName("password");

                    b.Property<int?>("Role")
                        .HasColumnType("int")
                        .HasColumnName("role");

                    b.Property<string>("StdImg")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("StudentEmail")
                        .HasMaxLength(55)
                        .IsUnicode(false)
                        .HasColumnType("varchar(55)")
                        .HasColumnName("studentEmail");

                    b.Property<string>("StudentName")
                        .HasMaxLength(55)
                        .IsUnicode(false)
                        .HasColumnType("varchar(55)")
                        .HasColumnName("studentName");

                    b.HasKey("StudentId");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("ITM_College.Models.StudentCourseRegistration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("AddmissionFor")
                        .HasColumnType("int")
                        .HasColumnName("addmissionFor");

                    b.Property<DateTime?>("Dob")
                        .HasColumnType("date")
                        .HasColumnName("DOB");

                    b.Property<string>("FatherName")
                        .HasMaxLength(55)
                        .IsUnicode(false)
                        .HasColumnType("varchar(55)")
                        .HasColumnName("fatherName");

                    b.Property<string>("Gender")
                        .HasMaxLength(55)
                        .IsUnicode(false)
                        .HasColumnType("varchar(55)")
                        .HasColumnName("gender");

                    b.Property<string>("MotherName")
                        .HasMaxLength(55)
                        .IsUnicode(false)
                        .HasColumnType("varchar(55)")
                        .HasColumnName("motherName");

                    b.Property<string>("PermanentAddress")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("permanentAddress");

                    b.Property<string>("ResidentalAddress")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("residentalAddress");

                    b.Property<int?>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.Property<int?>("StudentId")
                        .HasColumnType("int")
                        .HasColumnName("studentID");

                    b.Property<string>("StudentName")
                        .HasMaxLength(55)
                        .IsUnicode(false)
                        .HasColumnType("varchar(55)")
                        .HasColumnName("studentName");

                    b.Property<string>("TrackingId")
                        .HasMaxLength(55)
                        .IsUnicode(false)
                        .HasColumnType("varchar(55)")
                        .HasColumnName("trackingID");

                    b.HasKey("Id");

                    b.HasIndex("AddmissionFor");

                    b.HasIndex("StudentId");

                    b.ToTable("StudentCourseRegistration", (string)null);
                });

            modelBuilder.Entity("ITM_College.Models.Course", b =>
                {
                    b.HasOne("ITM_College.Models.Faculty", "Faculty")
                        .WithMany("Courses")
                        .HasForeignKey("FacultyId")
                        .HasConstraintName("FK__Courses__faculty__4222D4EF");

                    b.Navigation("Faculty");
                });

            modelBuilder.Entity("ITM_College.Models.Faculty", b =>
                {
                    b.HasOne("ITM_College.Models.Department", "FacultyDepartmentNavigation")
                        .WithMany("Faculties")
                        .HasForeignKey("FacultyDepartment")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__faculties__facul__3F466844");

                    b.Navigation("FacultyDepartmentNavigation");
                });

            modelBuilder.Entity("ITM_College.Models.PreviousExam", b =>
                {
                    b.HasOne("ITM_College.Models.StudentCourseRegistration", "StudentData")
                        .WithMany("PreviousExams")
                        .HasForeignKey("StudentDataId")
                        .HasConstraintName("FK__PreviousE__stude__4AB81AF0");

                    b.Navigation("StudentData");
                });

            modelBuilder.Entity("ITM_College.Models.StudentCourseRegistration", b =>
                {
                    b.HasOne("ITM_College.Models.Course", "AddmissionForNavigation")
                        .WithMany("StudentCourseRegistrations")
                        .HasForeignKey("AddmissionFor")
                        .HasConstraintName("FK__StudentCo__addmi__47DBAE45");

                    b.HasOne("ITM_College.Models.Student", "Student")
                        .WithMany("StudentCourseRegistrations")
                        .HasForeignKey("StudentId")
                        .HasConstraintName("FK__StudentCo__stude__46E78A0C");

                    b.Navigation("AddmissionForNavigation");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("ITM_College.Models.Course", b =>
                {
                    b.Navigation("StudentCourseRegistrations");
                });

            modelBuilder.Entity("ITM_College.Models.Department", b =>
                {
                    b.Navigation("Faculties");
                });

            modelBuilder.Entity("ITM_College.Models.Faculty", b =>
                {
                    b.Navigation("Courses");
                });

            modelBuilder.Entity("ITM_College.Models.Student", b =>
                {
                    b.Navigation("StudentCourseRegistrations");
                });

            modelBuilder.Entity("ITM_College.Models.StudentCourseRegistration", b =>
                {
                    b.Navigation("PreviousExams");
                });
#pragma warning restore 612, 618
        }
    }
}
